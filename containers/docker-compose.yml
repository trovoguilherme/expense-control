version: '3.9'

services:
  sonarqube:
    image: sonarqube:8.9.9-community
    expose:
      - 9000
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - sonarnet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conff:/opt/sonarqube/conf
      - sonarqube_dataa:/opt/sonarqube/data
      - sonarqube_extensionss:/opt/sonarqube/extensions
      - sonarqube_bundled-pluginss:/opt/sonarqube/lib/bundled-plugins

  db:
    image: postgres
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresqll:/var/lib/postgresql
      - postgresql_dataa:/var/lib/postgresql/data

  expense-control:
    container_name: expense-control
    build:
      context: ../
      dockerfile: Dockerfile
    image: expense-control:latest
    ports:
      - '8080:8080'
    environment:
      SPRING_PROFILES_ACTIVE: homolog

  postgres:
    container_name: expense_control_postgres_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: expense
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - expense-control-postgres-db-data:/data/postgres
    ports:
      - "5432:5432"

networks:
  sonarnet:

volumes:
  sonarqube_conff:
  sonarqube_dataa:
  sonarqube_extensionss:
  sonarqube_bundled-pluginss:
  postgresqll:
  postgresql_dataa:
  expense-control-postgres-db-data:
    driver: local